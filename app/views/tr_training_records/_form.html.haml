= simple_form_for(@tr_training_record) do |f|
  = f.error_notification
  = f.error :tr_training_employees
  
  .form-inputs
    .well.well-sm{:style => "background-color:#ffe6ff;"}
      %ul.list-inline
        %li
          %strong <abbr title="required">*</abbr>Training Course<br>
          = f.association :tr_course, :as => :collection_select, collection:TrCourse.order(:name, :id).where(active_status: 1), :label_method => lambda { |tr_course| "#{tr_course.name}, #{tr_course.id}" }, label: false
        %li
          = f.input :training_date
        %li
          = f.input :hours_trained
        %li
          = f.input :trainer
    
    .well.well-sm{:style => "background-color:#ffe6ff;"}
      %ul.list-inline
        %li
          = f.input :title, label:raw('<strong>Title:&nbsp;&nbsp;&nbsp;&nbsp;</strong><span style="font-weight:normal;color:grey"><small>If `Training Course` is `misc` or `external`, add a Title here or `Secondary Course Name` from the dropdown.</small></span>')
        %li
          = f.association :tr_secondary_course_name, :as => :collection_select, collection:TrSecondaryCourseName.order(:name)
    
    = f.input :details_of_training, label:raw('<strong>Details of Training:&nbsp;&nbsp;&nbsp;&nbsp;</strong><span style="font-weight:normal;color:grey"><small>Fill this in only if everything else on this page is not adequate to specify the training.</small></span>')
    = f.input :location
    = f.input :swi, label:'SWI number'
    = f.input :path_to_training_material, label:raw('<strong>Path to training material &nbsp;&nbsp;&nbsp;&nbsp;</strong><span style="font-weight:normal;color:grey"><small>Where are the training materials located?  Eg: S:\HR\Info\Safety Talks\Safety Talks 2016\Hazard Reporting - Janaury.pptx, or Windchill, or etc. If other, please expand.</small></span>')
    
    = link_to 'S: drive', '\\\\csd-server\\strat common\\', { target: '_blank' }
    
    .well.well-sm{:style => "background-color:#ffddcc;"}  
      %ul.list-inline
        %li
          = f.association :tr_type, :as => :collection_select, collection:TrType.order(:name), :label_method => lambda { |tr_type| "#{tr_type.name} " }, label:'Position'
        %li
          = f.association :tr_customer, :as => :collection_select, collection:TrCustomer.order(:name, :location), :label_method => lambda { |tr_customer| "#{tr_customer.name}, #{tr_customer.location}" }, label:raw('&nbsp &nbsp Customer')
        %li
          = f.association :tr_program, :as => :collection_select, collection:TrProgram.order(:name), :label_method => lambda { |tr_program| "#{tr_program.name} " }, label:raw('&nbsp &nbsp Program')
      %ul.list-inline
        %li
          = f.association :tr_part, :as => :collection_select, collection:TrPart.order(:name, :partnumber), :label_method => lambda { |tr_part| "#{tr_part.name}, #{tr_part.partnumber}" }, label:'Part'
        %li
          = f.association :tr_cell, :as => :collection_select, collection:TrCell.order(:name, :operation), :label_method => lambda { |tr_cell| "#{tr_cell.name}, #{tr_cell.operation}" }, label:raw('&nbsp &nbsp Cell')
        %li
          = f.association :stf_asset, :as => :collection_select, collection:StfAsset.order(:description, :assetnum), :label_method => lambda { |stf_asset| "#{stf_asset.description}, #{stf_asset.assetnum}" }, label:raw('&nbsp &nbsp Asset') 
    /= f.association :user
    
    /%h3 <abbr title="required">*</abbr>Training employee
    %h3 Trained Employees
    #tr_training_employees
      = f.simple_fields_for :tr_training_employees do |tr_training_employee|
        = render 'tr_training_employee_fields', f: tr_training_employee, tr_training_employee: f.object
      
      .links
        = link_to_add_association 'add tr_training_employee', f, :tr_training_employees, class: 'btn btn-primary btn-lg'
    %hr    

  .form-actions
    = f.button :submit, class: 'btn btn-success btn-lg'
    &nbsp &nbsp | &nbsp &nbsp
    = link_to t('actions.back'), tr_training_records_path
  %hr